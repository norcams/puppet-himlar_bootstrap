install
url --url <%= scope.lookupvar('::himlar_bootstrap::mirror') %>
lang en_US.UTF-8
selinux --permissive
keyboard <%= scope.lookupvar('::himlar_bootstrap::keyboard') %>
skipx
<% if @use_dhcp -%>
network --bootproto dhcp --hostname <%= @hostname %>
<% else -%>
network --hostname <%= @hostname %>
<% end -%>
rootpw --iscrypted <%= scope.lookupvar('::himlar_bootstrap::rootpw') %>
firewall --service=ssh
authselect --useshadow --passalgo=sha256 --kickstart
timezone --utc <%= scope.lookupvar('::himlar_bootstrap::timezone') %>
services --disabled gpm,sendmail,cups,pcmcia,isdn,rawdevices,hpoj,bluetooth,openibd,avahi-daemon,avahi-dnsconfd,hidd,hplip,pcscd
repo --name="epel" --baseurl=<%= scope.lookupvar('::himlar_bootstrap::yumrepo') %>/epel

bootloader --location=mbr --append="nofb quiet splash=quiet"

zerombr
  clearpart --all --initlabel
  part /boot --fstype xfs --size 512 --asprimary
  part pv.sda --size=5120 --grow --maxsize=10240 --asprimary
  part pv.ext --grow
  volgroup vg_root pv.sda
    logvol swap --name=lv_swap --vgname=vg_root --size=256
    logvol / --name=lv_root --vgname=vg_root --fstype=xfs --size=4096 --grow

text
reboot

%packages
dnf
dhclient
chrony
-ntp
pciutils
net-tools
network-scripts
@Core
%end

%post --nochroot
exec < /dev/tty3 > /dev/tty3
#changing to VT 3 so that we can see whats going on....
/usr/bin/chvt 3
(
cp -va /etc/resolv.conf /mnt/sysimage/etc/resolv.conf
/usr/bin/chvt 1
) 2>&1 | tee /mnt/sysimage/root/install.postnochroot.log
%end
%post
logger "Starting anaconda postinstall"
exec < /dev/tty3 > /dev/tty3
#changing to VT 3 so that we can see whats going on....
/usr/bin/chvt 3
(
#update local time
echo "updating system time"
/sbin/chronyd -q 'server 0.europe.pool.ntp.org iburst'
/sbin/hwclock --systohc

<% if @kernel_opts =~ /.*net\.ifnames=0.*/ -%>
# Add "net.ifnames=0"
/usr/bin/sed -i -e 's/quiet/net.ifnames=0 quiet/' /etc/default/grub
/usr/sbin/grub2-mkconfig -o /boot/grub2/grub.cfg
<% else -%>
# Override udev net-rules on el7 and greater if ifnames not set
mkdir -p /etc/udev/rules.d/60-net.rules
<% end -%>

# **** Configure additional network interfaces as defined in "enable-addifs" parameter
# **** The last IP byte for these interfaces will be the same as for the primary interface
# **** Format for this parameter is interfacename1_network/prefix:interfacename2_network/prefix etc
# **** example: eth1_172.16.44.0/24:eth2_192.168.0.0/21


if [[ -n "$configure_addifs" ]]; then
IFS=':' read -a ifnetarray <<< "$configure_addifs"

for ifelement in "${ifnetarray[@]}"
    do
        ifdevice=${ifelement%_*}
        ifprefix=$(echo "${ifelement#*/}")
        ifnetwork=$(echo "$ifelement" | cut -f2 -d"_")
        ifhwaddr=$(/sbin/ip link show $ifdevice|grep link|sed -e 's/link\/ether//1'|sed 's/^ *//'|awk '{print $1}')
        iffoo=$(/sbin/ip route|grep default| cut -d" " -f5 | head -n 1)
        ifipbyte=$(/sbin/ip addr show $iffoo|grep "inet "|sed -e 's/inet //1'|sed 's/^ *//'|awk '{print $1}'|cut -f1 -d"/"|cut -f4 -d".")
        ifipaddress="$(echo "$ifnetwork" | cut -f1,2,3 -d ".").$ifipbyte"
        ifnetmask=$(/bin/ipcalc -m $ifipaddress/$ifprefix|sed 's/NETMASK=//')
        echo "DEVICE=\"$ifdevice\"
IPADDR=\"$ifipaddress\"
NETMASK=\"$ifnetmask\"
BOOTPROTO=\"static\"
DEFROUTE=\"no\"
ONBOOT=\"yes\"
HWADDR=\"$ifhwaddr\"" > /etc/sysconfig/network-scripts/ifcfg-$ifdevice
        echo "Added device $ifdevice, HWaddr is $ifhwaddr, network is $ifnetwork, netmask is $ifipbyte. Address for device $ifdevice is $ifipaddress"
    done
    /sbin/ifup $ifdevice
fi

# **** Disable NetworkManager and use network script for el8
/usr/bin/systemctl disable NetworkManager.service
/usr/bin/systemctl enable network.service

echo "Running Puppet bootstrap"
dnf -y install git-core
git clone <%= scope.lookupvar('::himlar_bootstrap::puppetrepo') %> /opt/himlar
/opt/himlar/provision/puppetbootstrap.sh
HIMLAR_PUPPETFILE=deploy /opt/himlar/provision/puppetmodules.sh
FACTER_RUNMODE=kickstart HIMLAR_CERTNAME=<%= @certname %> /opt/himlar/provision/puppetrun.sh
echo "HIMLAR_PUPPETFILE=deploy /opt/himlar/provision/puppetmodules.sh && FACTER_RUNMODE=bootstrap HIMLAR_CERTNAME=<%= @certname %> /opt/himlar/provision/puppetrun.sh" > /root/puppet_bootstrap.sh
chmod 755 /root/puppet_bootstrap.sh
sync

# update all the base packages from the updates repository
dnf --refresh -y -e 0 update

# Sleeping an hour for debug
) 2>&1 | tee /root/install.post.log
exit 0

%end
